{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","onSubmit","preventDefault","props","reset","this","className","s","form","label","type","pattern","title","required","onChange","button","Component","ContactList","contacts","handleClick","list","map","id","btn","onClick","Filter","input","App","filter","handleSubmit","data","some","contact","toLowerCase","alert","prevState","shortid","generate","handleRemove","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c3b6b57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__iC_E9\",\"input\":\"Filter_input__1pdth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1hhjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2MtSB\",\"label\":\"ContactForm_label__E7C2o\",\"button\":\"ContactForm_button__puJ-k\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.onSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactForm };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, handleClick }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button className={s.btn} type=\"button\" onClick={() => handleClick(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactList };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      name=\"name\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Filter };\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleSubmit = (data) => {\n    const { contacts } = this.state;\n    const existContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    if (existContact) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState((prevState) => ({\n      contacts: [\n        {\n          id: shortid.generate(),\n          name: data.name,\n          number: data.number,\n        },\n        ...prevState.contacts,\n      ],\n    }));\n  };\n\n  handleRemove = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          handleClick={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Fey8\",\"btn\":\"ContactList_btn__b6TXo\"};"],"sourceRoot":""}